version: "3.7"
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
    - 2181:2181
  kafka:
    image: wurstmeister/kafka:2.12-2.0.1
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "raw:2:1, devices:2:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - 9094:9094
#  sber-store-server:
#    image: sber-store-server:latest
#    ports:
#      - 50052:50052
#  update-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#      - sber-store-server
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.jobs.UpdateJob -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --interval-join-window 10 --session-window-gap 1 --jobName Update --rts-request-timeout 100 --disable-chaining true"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#  predict-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#      - sber-store-server
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.jobs.PredictJob -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName Predict --avatar-cj-list 0 --disable-chaining true --shared-weight-topic weight --rts-request-timeout 10000"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#  dense-job:
#    image: dense-job:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#      - sber-store-server
#    command: "flink run -c ru.sbt.cep.rtdm.densebridge.CassandraDenseBridge -d -p 2 /opt/dense-bridge-cassandra-adapter.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName CassandraDenseBridge --inputTopics raw --dense-filter-ids 301 --outputTopics common-user-feature --dense-key-type long --id-field-name text4 --rts-request-timeout 1 --transformationKey avatar-recommender-trigger-key"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#  upload-mapping-job:
#    image: dense-job:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#      - sber-store-server
#    command: "flink run -c ru.sbt.cep.rtdm.densebridge.OdMappingJob -d -p 2 /opt/dense-bridge-cassandra-adapter.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName CassandraDenseBridge --inputTopics input --dense-filter-ids 100 --outputTopics common-user-feature,item-feature --clientDkField p4 --epkIdField text4 --hpanField text0 --cardTypeField p10 --disable-chaining true"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#
#
#  mapping-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#      - sber-store-server
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.mapping.CdkToEpkJob -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName Mapping --rts-request-timeout 10000 --disable-chaining true --userField clientId --mapping-mode replace --mapping-feature item-feature --inputTopics raw --outputTopics audit"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#  feature-generator:
#    image: flink-test-job:latest
#    depends_on:
#      - kafka
#    command: "java -cp /opt/avatar-bandit-test-utils.jar ru.sbt.cep.rtdm.bandit.test.FeatureGenerator --test-user-count 100 --bootstrap.servers kafka:9092"
#  test-job:
#    image: flink-test-job:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.test.IntegrationTestJob -d -p 2 /opt/avatar-bandit-test-utils.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName Test --test-user-count 100 --test-thresh-open 10 --test-thresh-like 1 --mef-vector-dim 3"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#  prometheus:
#    image: prom/prometheus:v2.19.0
#    container_name: prometheus
#    ports:
#      - 9090:9090
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#      - ./prometheus/flink.rules.yml:/etc/prometheus/flink.rules.yml
#  test-cass:
#    image: flink-test-job:latest
#    command: "java -cp /opt/avatar-bandit-test-utils.jar ru.sbt.cep.rtdm.bandit.test.CassandraQuery --test-query-list vector --test-feature-list common-user-feature --test-string-id 12345 --test-vetor-type long"
#
#  cold-vector-enricher:
#    image: cold-vector-enricher:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.cep.rtdm.trans.enrichment.TransEnrichmentCassandraEnricher -d -p 2 /opt/trans-history-cassandra.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName TransHistory --rts-feature-topic common-user-feature --inputTopics input --outputTopics audit --disable-chaining true"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobman

#  deduplication-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.jobs.feedback.DeduplicationJob -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName DeduplicationJob --session-window-gap 1 --inputTopics input --outputTopics output --disable-chaining true --feedback-array-path data --item-id-field properties.id.value --user-id-path profile.cookie._ga.value --event-type-field eventType --timestamp-field timeStamp"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#  audit-filter-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.jobs.feedback.FeedbackAuditFilterJob -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --interval-join-window 10 --session-window-gap 1 --jobName AuditJoin --rts-request-timeout 100 --disable-chaining true --inputTopics output --outputTopics raw"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#  reward-update-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.jobs.feedback.RewardAndUpdateJob -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --interval-join-window 10 --session-window-gap 1 --jobName Update --rts-request-timeout 100 --disable-chaining true --inputTopics raw"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#  user-history-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.jobs.feedback.UserHistoryJob -d -p 2 /opt/avatar-bandit-update.jar --session-window-gap 1 --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName UserHistoryJob --session-window-gap 1 --inputTopics output --outputTopics users --disable-chaining true --transformationKey user-history"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#  simple-predict-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.jobs.feedback.SimplePredictJob -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName SimplePredictJob --inputTopics input --disable-chaining true --transformationKey simple-predict --num-predictions 10 --bandit-scheduled-time 1 --rts-request-timeout 100"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager


#  od-bridge-job:
#    image: dense-job:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#      - sber-store-server
#    command: "flink run -c ru.sbt.cep.rtdm.densebridge.OdScheduleBridge -d -p 2 /opt/dense-bridge-cassandra-adapter.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName OdScheduleBridge --inputTopics output --dense-filter-ids 101 --outputTopics input"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#  schedule-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#      - sber-store-server
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.jobs.SchedulingService -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName SchedulingService --inputTopics input"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager

#  cbro-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#      - sber-store-server
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.jobs.CbroCampaignJob -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName SchedulingService --inputTopics input --transformationKey cbro-campaigns.yaml --config-feature-name common-user-feature --rts-request-timeout 10000"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#
#  transformations-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#      - sber-store-server
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.jobs.BanditTransformationsListener -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName SchedulingService --transformationKey avatar-recommender-cj-item-mapping.yaml --config-feature-name common-user-feature -rts-request-timeout 10000"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#  predict-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#      - sber-store-server
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.predict.PredictJob -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName Predict --avatar-cj-list 0 --disable-chaining true --shared-weight-topic weight --rts-request-timeout 10000 --rts-bootstrap-servers sber-store-server:50052 --ssl.enabled false"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager

#  deduplication-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.update.DeduplicationJob -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --jobName DeduplicationJob --session-window-gap 1 --inputTopics input --outputTopics output --disable-chaining true"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager

#  audit-filter-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.update.FeedbackAuditFilterJob -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --interval-join-window 10 --session-window-gap 1 --jobName AuditJoin --rts-request-timeout 100 --disable-chaining true --inputTopics output --outputTopics raw"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager

#  item-count-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.cep.rtdm.bandit.update.ItemCounter -d -p 2 /opt/avatar-bandit-update.jar --bootstrap.servers kafka:9092 --checkpointing --event-time --interval-join-window 10 --session-window-gap 1 --jobName AuditJoin --rts-request-timeout 100 --disable-chaining true --inputTopics output --outputTopics raw"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager

#  convert-hashtag-with_map-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.flink.hashtags.job.HashTagsFromJsWithMap -d -p 2 /opt/od_hashtages_cassandra.jar --bootstrap.servers kafka:9092 --event-time --interval-join-window 10 --session-window-gap 1 --jobName HashtagsWithMap ---elkLoggerName ELK_Logger -rts-request-timeout 100 --disable-chaining true --inputTopics hashtags_in --outputTopics raw --transformationTopic hashtags_config"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager

#  convert-hashtag-job:
#    image: flink-jobs:latest
#    depends_on:
#      - kafka
#      - jobmanager
#      - taskmanager
#    command: "flink run -c ru.sbt.flink.hashtags.job.HashtagsFromJsonJob -d -p 2 /opt/od_hashtages_cassandra.jar --bootstrap.servers kafka:9092 --event-time --interval-join-window 10 --session-window-gap 1 --jobName Hashtags ---elkLoggerName ELK_Logger -rts-request-timeout 100 --disable-chaining true --inputTopics hashtags_in --outputTopics hashtags_out"
#    volumes:
#      - ./conf:/opt/flink/conf
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager

#volumes:
#  flink-checkpoints-directory:


# {"payload": {"p1": 301, "p11": 1, "p15": 2, "text4": "12345"}}
# {"payload": {"p1": 101, "p11": 0.5, "p2": 0, "p3": 20220, "text4": "12345", "text1": "2020-11-03T14:47:00+03:00"}}

