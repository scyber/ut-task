/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.8.3/samples
 */
plugins {
    id "scala"
    //id 'org.gradle.playframework' version '0.11'
    //id "com.github.johnrengelman.shadow" version "6.0.0"
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        name "lightbend-maven-release"
        url "https://repo.lightbend.com/lightbend/maven-releases"
    }
    ivy {
        name "lightbend-ivy-release"
        url "https://repo.lightbend.com/lightbend/ivy-releases"
        layout "ivy"
    }
}
configurations {
    extraLibs
}
dependencies {
    compile 'org.scala-lang:scala-library:2.12.11'
    compile group: 'io.circe', name: 'circe-core_2.12', version: '0.13.0'
    compile group: 'io.circe', name: 'circe-generic_2.12', version: '0.13.0'
    compile group: 'io.circe', name: 'circe-parser_2.12', version: '0.13.0'
    compile group: 'io.circe', name: 'circe-optics_2.12', version: '0.13.0'
    compile group: 'joda-time', name: 'joda-time', version: '2.10.10'

    compile group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.1.0'
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.1.0'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'

    compile group: 'org.apache.spark', name: 'spark-core_2.12', version: '3.1.1'
    compile group: 'org.apache.spark', name: 'spark-sql_2.12', version: '3.1.1'
    compile group: 'org.apache.spark', name: 'spark-streaming_2.12', version: '3.1.1'

    //compile group: 'com.typesafe.akka', name: 'akka-http', version: '10.2.4'


    implementation group: 'org.json', name: 'json', version: '20090211'
//    testCompile 'org.scala-lang:scala-library:2.12.11'
    testImplementation 'org.scalatest:scalatest_2.12:3.0.0'
    testImplementation 'junit:junit:4.13'


}
jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    zip64(true)
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}